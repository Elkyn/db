Args count: 4
  args[0] = ./bin/elkyn-server
  args[1] = 8889
  args[2] = ./data
  args[3] = test-secret
Starting simple HTTP server on port 8889 with data dir: ./data
Authentication enabled (required: false)
info(simple_http): Server listening on port 8889
info(simple_http): Authentication enabled (required: false)
info(rules_engine): Loaded security rules
info(simple_http): Security rules enabled
info(simple_http): Server started on port 8889
debug(simple_http): Request (190 bytes): POST /auth/token HTTP/1.1
Host: localhost:8889
User-Agent: curl/8.7.1
Accept: */*
Content-Type: application/json
Content-Length: 50

{"uid": "user123", "email": "user123@example.com"}
debug(simple_http): Request (406 bytes): PUT /users/user123 HTTP/1.1
Host: localhost:8889
User-Agent: curl/8.7.1
Accept: */*
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJ1c2VyMTIzIiwiZW1haWwiOiJ1c2VyMTIzQGV4YW1wbGUuY29tIiwiZXhwIjoxNzUzMzU2NDY3LCJpYXQiOjE3NTMzNTI4Njd9.21F45-ACYMD4crGbPGe1PJtB8_LFfF81lPItKX6GYKQ
Content-Type: application/json
Content-Length: 51

{"name": "My User", "email": "user123@example.com"}
debug(simple_http): Body content: '{"name": "My User", "email": "user123@example.com"}'
Segmentation fault at address 0x102a00010
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/mem.zig:745:79: 0x102767894 in eqlBytes (elkyn-server)
            x |= @as(u32, @bitCast(a[n..][0..4].*)) ^ @as(u32, @bitCast(b[n..][0..4].*));
                                                                              ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/mem.zig:700:24: 0x10275784f in eql__anon_7295 (elkyn-server)
        return eqlBytes(sliceAsBytes(a), sliceAsBytes(b));
                       ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/hash_map.zig:85:19: 0x1027ca89f in eqlString (elkyn-server)
    return mem.eql(u8, a, b);
                  ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/hash_map.zig:80:25: 0x1027bc6af in eql (elkyn-server)
        return eqlString(a, b);
                        ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/hash_map.zig:987:32: 0x102845a6b in getIndex__anon_35919 (elkyn-server)
                    if (ctx.eql(key, test_key.*)) {
                               ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/hash_map.zig:1087:30: 0x10282cfdb in getAdapted__anon_28351 (elkyn-server)
            if (self.getIndex(key, ctx)) |idx| {
                             ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/hash_map.zig:1084:35: 0x10281b3c7 in getContext (elkyn-server)
            return self.getAdapted(key, ctx);
                                  ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/hash_map.zig:367:45: 0x1027f875f in get (elkyn-server)
            return self.unmanaged.getContext(key, self.ctx);
                                            ^
/Users/a664144/projects/elkyn-db/src/rules/evaluator.zig:63:31: 0x1027f7b57 in evaluatePath (elkyn-server)
        if (rules.children.get(segment)) |child| {
                              ^
/Users/a664144/projects/elkyn-db/src/rules/evaluator.zig:30:37: 0x1027f8d6f in evaluate (elkyn-server)
        return try self.evaluatePath(&config.root, rule_type, context, segments.items, 0);
                                    ^
/Users/a664144/projects/elkyn-db/src/rules/engine.zig:101:43: 0x1027f9293 in isAllowed (elkyn-server)
        return try self.evaluator.evaluate(&config, rule_type, &context);
                                          ^
/Users/a664144/projects/elkyn-db/src/rules/engine.zig:111:34: 0x1027ff913 in canWrite (elkyn-server)
        return try self.isAllowed(.write, path, auth, new_data);
                                 ^
/Users/a664144/projects/elkyn-db/src/api/simple_http_server.zig:285:44: 0x102804c47 in handlePut (elkyn-server)
            const allowed = engine.canWrite(path, &auth, value) catch |err| {
                                           ^
/Users/a664144/projects/elkyn-db/src/api/simple_http_server.zig:217:31: 0x102808207 in handleConnection (elkyn-server)
            try self.handlePut(connection, path, request, auth);
                              ^
/Users/a664144/projects/elkyn-db/src/api/simple_http_server.zig:76:34: 0x102808abb in start (elkyn-server)
            self.handleConnection(connection) catch |err| {
                                 ^
/Users/a664144/projects/elkyn-db/src/simple_server_main.zig:77:21: 0x1028095d3 in main (elkyn-server)
    try server.start();
                    ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/start.zig:660:37: 0x10280a8f3 in main (elkyn-server)
            const result = root.main() catch |err| {
                                    ^
???:?:?: 0x18de53153 in ??? (???)
???:?:?: 0x5f7fffffffffff in ??? (???)
